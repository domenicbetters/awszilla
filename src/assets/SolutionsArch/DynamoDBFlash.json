[
    {"name": "DynamoDB is a key-value and documentDB databse by Amazon", "desc": "What is DynamoDB?"},
    {"name": "20 million, 10 trillion", "desc": "DynamoDb can handle _________ requests per second and ______ requests a day."},
    {"name": "Yes.", "desc": "Is DynamoDB a serverless service?"},
    {"name": "True.", "desc": "True or false.  DynamoDB is designed for automatic scaling and can be replicated across multiple regions."},
    {"name": "True.", "desc": "True or False.  You can create dynamic tables, which means it can store any number of multi-valued attributes."},
    {"name": "Uniquely identifies each item in the table.", "desc": "What is the primary key in DynamoDB"},
    {"name": "It is a primary key with one attribute", "desc": "What is a partition key?"},
    {"name": "a database index is an entity in the database that will improve data retrieval speed in any table.", "desc": "What is an index?"},
    {"name": "It is used when you do not have any attribute in the table, which will identify the item in the table.", "desc": "When do you use a sort key with your partition key?"},
    {"name": "When you need a way to efficiently access records in a database utilizing some information other than the usual primary key.", "desc": "When do you use a secondary index?"},
    {"name": "Global, which can have different partitions and sort keys from the table, and Local which has the same partition key as the table but a different sort key. ", "desc": "What two types of secondary indexes are there?"},
    {"name": "It is a fully managed in-memory cache engine designed for DynamoDB", "desc": "What is DynamoDB Accelerator?"},
    {"name": "True.", "desc": "True or False.  DAX can improve performance from milliseconds to microseconds"},
    {"name": "False.  It is for read-intensive workloads.", "desc": "True or False.  DAX is for workloads that are write intensive, not read intensive."},
    {"name": "Yes, you can have both horizontal and vertical scaling.", "desc": "Can you have both types of scaling in DAX"},
    {"name": "eventually consistent", "desc": "While accessing data in a table, Scan operation uses _________ reads."},
    {"name": "The value of primary keys", "desc": "Queries in DynamoDB are base on what?"},
    {"name": "1 MB", "desc": "One query operation can fetch how much data?"},
    {"name": "It captures the sequence of item level modification in the table.", "desc": "What does DynamoDB Streams do?"},
    {"name": "24", "desc": "Streams information is stored for up to __________ hours"},
    {"name": "Lambda", "desc": "the most common way to access Streams is with __________."},
    {"name": "DynamoDB Transactions", "desc": "What can you use when the application needs to execute multiple operations as part of a single logic."},
    {"name": "4 MB", "desc": "Each Transaction can store how much data?"},
    {"name": "If you read the data from recent write operations. you will get stale data.", "desc": "Define Eventual Consistent Reads"},
    {"name": "If you read the data from the recent write operation you will get updated data, it just won't be available instantly.", "desc": "Define Strongly Consistent Writes."},
    {"name": "Read Capacity Unit, Write Capacity Unit, Provisioned, and On-Demand", "desc": "Name the four throughput models for DynamoDB"},
    {"name": "It charges per the disk space consumed, data transfered out, provisioned throughput, and resevered capacity units.", "desc": "How are you charged for using DynamoDB?"}
]